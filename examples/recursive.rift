let
  type Node = { value: i64, rest: List }
  type List = Link(Node) | Empty

  val l1 = List(Node {1, List(Node { 2, List(Node { 3, Empty })})})

  fn print_linked_list(l: List) =
    match l with
      | Link({ x, rest }) => print_int(x); print_linked_list(rest)
      | Empty => print("_")
in
  print_linked_list(l1)
end
